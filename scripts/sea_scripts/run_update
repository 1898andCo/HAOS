#!/bin/bash

set -e

if [ $(whoami) != "root" ]
then
	echo "This script must be run as root."
	exit 1
fi

PROC=$(uname -m)

if [ ! -d /k3os/system/kernel ]
then
  echo "This system seems to be using a custom kernel, no kernel updates available."
	exit 1
elif [ $PROC == "x86_64" ]
then
	ARCH="amd64"
elif [ $PROC == "aarch64" ]
then
	ARCH="arm64"
elif [[ $PROC == arm* ]] # catches armv7l and armhf
then
	ARCH="arm"
	echo "k3os for 32-bit ARM architecture only provides rootfs, no kernel updates available."
	exit 1
else
	echo "Unsupported CPU architecture."
	exit 1
fi

KERNEL_VERSION=$(cat k3os-kernel-version-${ARCH})  # Capture Kernel Version

# Error Checking
if [ -z "$KERNEL_VERSION" ]
then
  echo "Unable to determine kernel version"
  exit 1
fi

echo "Upgrading k3os kernel to ${KERNEL_VERSION}"

# Perform Kernel upgrade
PACKAGE=$(pwd)
cd /k3os/system/
mount -o remount,rw .
cd kernel
mkdir -vp ${KERNEL_VERSION}

mv ${PACKAGE}/k3os-initrd-${ARCH} ${KERNEL_VERSION}/initrd
mv ${PACKAGE}/k3os-kernel-${ARCH}.squashfs ${KERNEL_VERSION}/kernel.squashfs

ln -nsf $(readlink current) previous
ln -nsf ${KERNEL_VERSION} current

sync
echo "Kernel Upgrade complete!"

echo "Starting rootfs upgrade."
cd /k3os/system
mount -o remount,rw .

mv ${PACKAGE}/k3os-rootfs-amd64.tar.gz ./
cat k3os-rootfs-amd64.tar.gz | tar xzvf --strip-components=3
rm -rf k3os-rootfs-amd64.tar.gz
sync
echo "Upgrade complete! Please reboot."