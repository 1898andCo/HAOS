#!/bin/bash

set -e

if [ $(whoami) != "root" ]; then
    echo "This script must be run as root."
    exit 1
fi

PROC=$(uname -m)

if [ ! -d /haos/system/kernel ]; then
    echo "This system seems to be using a custom kernel, no kernel updates available."
    exit 1
elif [ $PROC == "x86_64" ]; then
    ARCH="amd64"
elif [ $PROC == "aarch64" ]; then
    ARCH="arm64"
elif [[ $PROC == arm* ]]; then # catches armv7l and armhf
    ARCH="arm"
    echo "haos for 32-bit ARM architecture only provides rootfs, no kernel updates available."
    exit 1
else
    echo "Unsupported CPU architecture."
    exit 1
fi

KERNEL_VERSION=$(cat haos-kernel-version-${ARCH}) # Capture Kernel Version

# Error Checking
if [ -z "$KERNEL_VERSION" ]; then
    echo "Unable to determine kernel version"
    exit 1
fi

echo "Upgrading haos kernel to ${KERNEL_VERSION}"

# Perform Kernel upgrade
PACKAGE=$(pwd)
cd /haos/system/
mount -o remount,rw .
cd kernel
mkdir -vp ${KERNEL_VERSION}

mv ${PACKAGE}/haos-initrd-${ARCH} ${KERNEL_VERSION}/initrd
mv ${PACKAGE}/haos-kernel-${ARCH}.squashfs ${KERNEL_VERSION}/kernel.squashfs

ln -nsf $(readlink current) previous
ln -nsf ${KERNEL_VERSION} current

sync
echo "Kernel Upgrade complete!"

echo "Starting rootfs upgrade."
cd /haos/system
mount -o remount,rw .

mv ${PACKAGE}/haos-rootfs-amd64.tar.gz ./
tar -xzvf haos-rootfs-amd64.tar.gz --strip-components=3 -C ./

rm -rf haos-rootfs-amd64.tar.gz
sync

rm -rf ${PACKAGE}
echo "Upgrade complete! Please reboot."
